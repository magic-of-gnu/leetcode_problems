class Solution:
    def singleNumber(self, nums):
        m0, m1 = 0, 0
        for bit in nums:
            _m0 = ( ~m0 &  m1 &  bit) | (  m0 & ~m1 &  bit)
            m1 ^= ( ~m0 & ~m1 &  bit) | ( ~m0 &  m1 &  bit)
            m0 ^= _m0

        return (m0 | m1)


if __name__ == '__main__':
    nums = [2,2,3,2]
    nums = [0,1,0,1,0,1,99]
    nums = [0,1,0,1,0,1,-99]
    nums = [30000,500,100,30000,100,30000,100]

    nums = [-401451,-177656,-2147483646,-473874,-814645,-2147483646,-852036,-457533,-401451,-473874,-401451,-216555,-917279,-457533,-852036,-457533,-177656,-2147483646,-177656,-917279,-473874,-852036,-917279,-216555,-814645,2147483645,-2147483648,2147483645,-814645,2147483645,-216555]

    sol = Solution()
    print(sol.singleNumber(nums))
